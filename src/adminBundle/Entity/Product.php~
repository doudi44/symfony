<?php

namespace adminBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

use Symfony\Component\Validator\Constraints as Assert;


/**
 * Product
 *
 * @ORM\Table(name="product")
 * @ORM\Entity(repositoryClass="adminBundle\Repository\ProductRepository")
 * @ORM\EntityListeners({"adminBundle\Listener\ProductListener"})
 */
class Product
{
    /**
     * @ORM\ManyToOne(targetEntity="Marque")
     * @ORM\JoinColumn(name="id_marque", referencedColumnName="id", nullable=false, onDelete="CASCADE")
     */
    private $marque;

    /**
     * @ORM\ManyToMany(targetEntity="Categorie", inversedBy="product")
     * @ORM\JoinColumn(name="id_categorie", referencedColumnName="id", nullable=false, onDelete="CASCADE")
     */
    private $categorie;


    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     *
     *
     */
    private $id;

    /**
     * @var datetime
     *
     * @ORM\Column(name="dateCreation", type="datetime")
     *
     *
     */
    private $dateCreation;

    /**
     * @var datetime
     *
     * @ORM\Column(name="dateModif", type="datetime")
     *
     *
     */
    private $dateModif;


    /**
     * @var string
     *
     * @ORM\Column(name="titleFR", type="string", length=100)
     * @Assert\NotBlank()
     * @Assert\Length(
     *      min=2,
     *      minMessage="Votre titre doit contenir au moins {{ limit }} caractères"
     *  )

     */
    private $titleFR;

    /**
     * @var string
     *
     * @ORM\Column(name="titleEN", type="string", length=100)
     * @Assert\NotBlank()
     * @Assert\Length(
     *      min=2,
     *      minMessage="Votre titre doit contenir au moins {{ limit }} caractères"
     *  )

     */
    private $titleEN;


    /**
     * @var string
     *
     * @ORM\Column(name="image", type="string", length=100)
     *
     */
    private $image;


    /**
     * @var string
     *
     * @ORM\Column(name="descriptionFR", type="text", nullable=true)
     *
     * @Assert\NotBlank()
     * @Assert\Length(
     *      max=300,
     *      maxMessage="Votre descritpion doit contenir au maximum {{ limit }} caractères"
     *  )
     */
    private $descriptionFR;

    /**
     * @var string
     *
     * @ORM\Column(name="descriptionEN", type="text", nullable=true)
     *
     * @Assert\NotBlank()
     * @Assert\Length(
     *      max=300,
     *      maxMessage="Votre descritpion doit contenir au maximum {{ limit }} caractères"
     *  )
     */
    private $descriptionEN;


    /**
     * @var float
     *
     * @ORM\Column(name="price", type="float")
     * @Assert\NotBlank()
     * @Assert\Range(
     *      min=0.01,
     *      minMessage="Votre prix doit être suppérieur à 0"
     *  )
     */
    private $price;

    /**
     * @var int
     *
     * @ORM\Column(name="quantity", type="integer")
     * @Assert\NotBlank()
     */
    private $quantity;


    /**
     * Constructor
     */
    public function __construct()
    {
        $this->categorie = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add categorie
     *
     * @param \adminBundle\Entity\Categorie $categorie
     *
     * @return Product
     */
    public function addCategorie(\adminBundle\Entity\Categorie $categorie)
    {
        $this->categorie[] = $categorie;

        return $this;
    }

    /**
     * Remove categorie
     *
     * @param \adminBundle\Entity\Categorie $categorie
     */
    public function removeCategorie(\adminBundle\Entity\Categorie $categorie)
    {
        $this->categorie->removeElement($categorie);
    }

}
